<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DefaultFindings" xml:space="preserve">
    <value>Default findings</value>
  </data>
  <data name="Departments" xml:space="preserve">
    <value>Departments</value>
  </data>
  <data name="Diagnoses" xml:space="preserve">
    <value>Diagnoses</value>
  </data>
  <data name="Equipments" xml:space="preserve">
    <value>Equipments</value>
  </data>
  <data name="FindingsEditor" xml:space="preserve">
    <value>Findings Editor</value>
  </data>
  <data name="InitialSettings" xml:space="preserve">
    <value>Initial Settings</value>
  </data>
  <data name="InputYourIDandPassword" xml:space="preserve">
    <value>Input your ID and Password.</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log Out</value>
  </data>
  <data name="Management" xml:space="preserve">
    <value>Management</value>
  </data>
  <data name="MyWords" xml:space="preserve">
    <value>My words</value>
  </data>
  <data name="NewExamination" xml:space="preserve">
    <value>New examination</value>
  </data>
  <data name="NewPatient" xml:space="preserve">
    <value>New patient</value>
  </data>
  <data name="Operators" xml:space="preserve">
    <value>Operators</value>
  </data>
  <data name="Option" xml:space="preserve">
    <value>Option</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="PatientId" xml:space="preserve">
    <value>Patient ID</value>
  </data>
  <data name="PlacesRooms" xml:space="preserve">
    <value>Places (Rooms)</value>
  </data>
  <data name="Plugin" xml:space="preserve">
    <value>Plug-in</value>
  </data>
  <data name="SearchByDate" xml:space="preserve">
    <value>Search by date</value>
  </data>
  <data name="SearchByDepartment" xml:space="preserve">
    <value>Search by department</value>
  </data>
  <data name="SearchByOp1" xml:space="preserve">
    <value>Search by operator 1</value>
  </data>
  <data name="SearchByOp15" xml:space="preserve">
    <value>Search by operator 1-5</value>
  </data>
  <data name="SearchExamination" xml:space="preserve">
    <value>Search examination</value>
  </data>
  <data name="SearchPatient" xml:space="preserve">
    <value>Search patient</value>
  </data>
  <data name="TodaysExaminations" xml:space="preserve">
    <value>Today's examinations</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User:</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="Wards" xml:space="preserve">
    <value>Wards</value>
  </data>
  <data name="Words" xml:space="preserve">
    <value>Words</value>
  </data>
  <data name="SettingFileCorrupt" xml:space="preserve">
    <value>The setting file may be corrupt. Do you want to delete the setting file?</value>
  </data>
  <data name="ConnectionFailed" xml:space="preserve">
    <value>Connection failed.</value>
  </data>
  <data name="ConnectionStringIsWrong" xml:space="preserve">
    <value>Connection string is wrong.</value>
  </data>
  <data name="FileInUse" xml:space="preserve">
    <value>File in use.</value>
  </data>
  <data name="NoDataFound" xml:space="preserve">
    <value>No data found.</value>
  </data>
  <data name="NotSupportedFileType" xml:space="preserve">
    <value>Not supported file type.</value>
  </data>
  <data name="PermissionDenied" xml:space="preserve">
    <value>Permission denied.</value>
  </data>
  <data name="TheFileDoesNotExist" xml:space="preserve">
    <value>The file does not exist.</value>
  </data>
  <data name="ConnectionClosedByServer" xml:space="preserve">
    <value>Connection closed by server.</value>
  </data>
  <data name="CouldNotEstablishConnection" xml:space="preserve">
    <value>Could not establish connection.</value>
  </data>
  <data name="CouldNotFindPatientData" xml:space="preserve">
    <value>Couldn't find patient data.</value>
  </data>
  <data name="DataBaseError" xml:space="preserve">
    <value>Database error.</value>
  </data>
  <data name="LockProcedureFailed" xml:space="preserve">
    <value>Lock procedure failed. Please contact your administrator.</value>
  </data>
  <data name="PleaseDeterminPassword" xml:space="preserve">
    <value>Please determine password.</value>
  </data>
  <data name="SuccessfullyUpdated" xml:space="preserve">
    <value>Successfully updated.</value>
  </data>
  <data name="UpdateFailed" xml:space="preserve">
    <value>Update failed.</value>
  </data>
  <data name="WrongIDorPW" xml:space="preserve">
    <value>Wrong ID or Password.</value>
  </data>
  <data name="DbServerIpAddress" xml:space="preserve">
    <value>Database server IP address</value>
  </data>
  <data name="ServerIpHasNotBeenConfigured" xml:space="preserve">
    <value>Server IP has not been configured.</value>
  </data>
  <data name="ServerPwHasNotBeenConfigured" xml:space="preserve">
    <value>Server password has not been configured.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ConnectionSuccessful" xml:space="preserve">
    <value>Connection successful.</value>
  </data>
  <data name="DbSrvPort" xml:space="preserve">
    <value>Database server port</value>
  </data>
  <data name="DbUserId" xml:space="preserve">
    <value>Database user ID</value>
  </data>
  <data name="DbUserPw" xml:space="preserve">
    <value>Database user password</value>
  </data>
  <data name="exIP" xml:space="preserve">
    <value>e.x. 192.168.1.10</value>
  </data>
  <data name="FigureFolder" xml:space="preserve">
    <value>Figure folder</value>
  </data>
  <data name="FileDoesNotExist" xml:space="preserve">
    <value>File does not exist.</value>
  </data>
  <data name="FolderDoesNotExist" xml:space="preserve">
    <value>Folder does not exist.</value>
  </data>
  <data name="IdRequired" xml:space="preserve">
    <value>ID required.</value>
  </data>
  <data name="PwHasBeenConfigured" xml:space="preserve">
    <value>Password has been configured.</value>
  </data>
  <data name="PwHasNotBeenConfigured" xml:space="preserve">
    <value>Password has not been configured.</value>
  </data>
  <data name="RenewPw" xml:space="preserve">
    <value>Renew Password</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SelectFolder" xml:space="preserve">
    <value>Select folder.</value>
  </data>
  <data name="ServerPortHasNotBeenConfigured" xml:space="preserve">
    <value>Server port has not been configured.</value>
  </data>
  <data name="TestConnection" xml:space="preserve">
    <value>Test connection</value>
  </data>
  <data name="MicUrl" xml:space="preserve">
    <value>http://www.madeinclinic.co.jp/</value>
  </data>
  <data name="Age" xml:space="preserve">
    <value>Age</value>
  </data>
  <data name="Birthday" xml:space="preserve">
    <value>Birthday</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="CouldntFindPatientData" xml:space="preserve">
    <value>Couldn't find patient data.</value>
  </data>
  <data name="Department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="DoYouWishToLogOut" xml:space="preserve">
    <value>Do you wish to log out?</value>
  </data>
  <data name="EditPatientInformation" xml:space="preserve">
    <value>Edit patient information</value>
  </data>
  <data name="ExamDate" xml:space="preserve">
    <value>ExamDate</value>
  </data>
  <data name="ExamType" xml:space="preserve">
    <value>ExamType</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="Load" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NoRecord" xml:space="preserve">
    <value>No record.</value>
  </data>
  <data name="NotSelected" xml:space="preserve">
    <value>Not selected.</value>
  </data>
  <data name="OrderedDr" xml:space="preserve">
    <value>Ordered Dr. </value>
  </data>
  <data name="PluginCouldntGetPtName" xml:space="preserve">
    <value>Plug-in couldn't get patient's name.</value>
  </data>
  <data name="ProcedureHasBeenCancelled" xml:space="preserve">
    <value>Procedure has been cancelled.</value>
  </data>
  <data name="Purpose" xml:space="preserve">
    <value>Purpose</value>
  </data>
  <data name="WardOutpatient" xml:space="preserve">
    <value>Ward/Outpatient</value>
  </data>
  <data name="ExamRecordAlreadyExist" xml:space="preserve">
    <value>Exam record(s) already exist.</value>
  </data>
  <data name="IdAlreadyExists" xml:space="preserve">
    <value>ID already exists.</value>
  </data>
  <data name="IdMayNotBeChanged" xml:space="preserve">
    <value>ID may not be changed.</value>
  </data>
  <data name="PatientData" xml:space="preserve">
    <value>Patient data</value>
  </data>
  <data name="SelectGender" xml:space="preserve">
    <value>Select gender.</value>
  </data>
  <data name="YouGoingToChangePtId" xml:space="preserve">
    <value>You going to change patient ID. Do you really want to change Patient ID?</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All(_A)</value>
  </data>
  <data name="ExamList" xml:space="preserve">
    <value>Exam List</value>
  </data>
  <data name="BlankDraft" xml:space="preserve">
    <value>Blank/Draft(_B)</value>
  </data>
  <data name="Canceled" xml:space="preserve">
    <value>Canceled(_E)</value>
  </data>
  <data name="Checked" xml:space="preserve">
    <value>Checked(_C)</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done(_D)</value>
  </data>
  <data name="Colon" xml:space="preserve">
    <value>:</value>
  </data>
  <data name="NoExamOnRecord" xml:space="preserve">
    <value>No exam on record.</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="DoYouReallyWantToDeleteIt" xml:space="preserve">
    <value>Do you really want to delete it?</value>
  </data>
  <data name="ReadOnlyMode" xml:space="preserve">
    <value>Permission denied. Read only mode.</value>
  </data>
  <data name="Suspect" xml:space="preserve">
    <value>Suspect</value>
  </data>
  <data name="YouCanMakeChangesOnlyToPatho" xml:space="preserve">
    <value>You can make changes only to pathology result.</value>
  </data>
</root>